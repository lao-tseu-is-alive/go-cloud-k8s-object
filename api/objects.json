{
  "openapi": "3.0.3",
  "info": {
    "title": "Object microservice written in Golang",
    "description": "OpenApi Specification for an API to manage Object",
    "contact": {
      "name": "go-cloud-k8s-object API Team",
      "url": "https://goeland.io",
      "email": "go-cloud-k8s-object@goeland.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "https://api.goeland.io/objects"
    }
  ],
  "paths": {
    "/objects": {
      "get": {
        "summary": "List returns a list of objects",
        "description": "Returns the objects in an array",
        "operationId": "List",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get List of objects response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObjectList"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "default": {
            "description": "unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create will create a new object",
        "description": "Creates a new object",
        "operationId": "Create",
        "requestBody": {
          "description": "Object to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Object creation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/objectsByType/{typeId}": {
      "get": {
        "summary": "ListByType returns a list of objects",
        "description": "Returns the objects in an array",
        "operationId": "ListByType",
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "description": "typeId of the objects needed",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get List of objects response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObjectList"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "default": {
            "description": "unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/objects/{objectId}": {
      "get": {
        "summary": "Get will retrieve in backend all information about a specific objectId",
        "description": "Retrieve a specific object",
        "operationId": "Get",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Id of the object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get object successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "get objects response when objectId was not found"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update allows to modify information about a specific objectId",
        "description": "Updates the status of a object",
        "operationId": "Update",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Id of the object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "informations related to the object",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "put objects successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "put objects response when objectId was not found"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete allows to delete a specific objectId",
        "description": "delete a object",
        "operationId": "Delete",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Id of the object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "delete object successful no content"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "delete object response when objectId was not found"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/types": {
      "get": {
        "summary": "TypeObjectList returns a list of types",
        "description": "Returns the types in an array",
        "operationId": "TypeObjectList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get List of types response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TypeObjectList"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "default": {
            "description": "unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "post": {
        "summary": "TypeObjectCreate will create a new group",
        "description": "Creates a new group",
        "operationId": "TypeObjectCreate",
        "requestBody": {
          "description": "TypeObject to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "TypeObject creation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeObject"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/types/{typeObjectId}": {
      "get": {
        "summary": "TypeObjectGet will retrieve in backend all information about a specific typeObjectId",
        "description": "Retrieve a specific typeObject",
        "operationId": "TypeObjectGet",
        "parameters": [
          {
            "name": "typeObjectId",
            "in": "path",
            "description": "Id of the typeObject",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get typeObject successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeObject"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "get typeObject response when typeObjectId was not found"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "put": {
        "summary": "TypeObjectUpdate allows to modify information about a specific typeObjectId",
        "description": "Updates the informations related to a typeObject",
        "operationId": "TypeObjectUpdate",
        "parameters": [
          {
            "name": "typeObjectId",
            "in": "path",
            "description": "Id of the typeObject",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "informations related to the typeObject",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TypeObject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "put typeObject successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeObject"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "put typeObject response when userId was not found"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "delete": {
        "summary": "TypeObjectDelete allows to delete a specific typeObjectId",
        "description": "delete a typeObject",
        "operationId": "TypeObjectDelete",
        "parameters": [
          {
            "name": "typeObjectId",
            "in": "path",
            "description": "Id of the typeObject",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "delete typeObject successful no content"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "delete typeObject response when typeObjectId was not found"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Object": {
        "required": [
          "create_time",
          "creator",
          "id",
          "is_active",
          "name",
          "type_object_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type_object_id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 2,
            "type": "string"
          },
          "description": {
            "minLength": 2,
            "type": "string"
          },
          "external_id": {
            "type": "integer",
            "format": "int32"
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "inactivation_time": {
            "type": "string",
            "format": "date-time"
          },
          "inactivation_reason": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "is_validated": {
            "type": "boolean",
            "default": false
          },
          "id_validator": {
            "type": "integer",
            "format": "int32"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "integer",
            "format": "int32"
          },
          "last_modification_time": {
            "type": "string",
            "format": "date-time"
          },
          "last_modification_user": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ObjectList": {
        "required": [
          "create_time",
          "creator",
          "id",
          "is_active",
          "name",
          "type_object_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type_object_id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 2,
            "type": "string"
          },
          "description": {
            "minLength": 2,
            "type": "string"
          },
          "external_id": {
            "type": "integer",
            "format": "int32"
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "creator": {
            "type": "integer",
            "format": "int32"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TypeObject": {
        "required": [
          "create_time",
          "creator",
          "id",
          "is_active",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 2,
            "type": "string"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "type": "integer",
            "format": "int32"
          },
          "last_modification_time": {
            "type": "string",
            "format": "date-time"
          },
          "last_modification_user": {
            "type": "integer",
            "format": "int32"
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "inactivation_time": {
            "type": "string",
            "format": "date-time"
          },
          "inactivation_reason": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "TypeObjectList": {
        "required": [
          "id",
          "is_active",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 2,
            "type": "string"
          },
          "is_active": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "JsonWebToken": {
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      }
    },
    "securitySchemes": {
      "JWTAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}